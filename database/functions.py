from django.shortcuts import render

import json
import requests
from django.http import JsonResponse

from .models import *

def fetch_data():

    response = requests.get('https://www.variotdbs.pl/api/vulns/?format=json')
    response.raise_for_status()

    data = response.content.decode('utf-8')
    data = json.loads(data)

    return data

def process_data(data):
	for cve in data['results']:
		cve_obj, created = CVE.objects.get_or_create(id=cve['id'], defaults={
			'description': cve['description']['data'],
			'title': cve['title']['data'],
			'type': cve['type']['data'],
			'last_updated': cve['last_update_date'],
			'release_date': cve['sources_release_date']['data'][0]['date'],
			'severity': cve['cvss']['data'][0]['severity'][0]['value']
		})

		if created:
			if 'affected_products' in cve:
				for product in cve['affected_products']['data']:
					product_obj = Product.objects.create(cve=cve_obj, model=product['model'], vendor=product['vendor'], version=product['version'])

			if ('external_ids' in cve):
				for data_source in cve['external_ids']['data']:
					data_source_obj = DataSources.objects.create(cve=cve_obj, name=data_source['db'], external_id=data_source['id'])

			if 'patch' in cve:
				for patch in cve['patch']['data']:
					patch_obj = Patch.objects.create(cve=cve_obj, name=patch['title'], url=patch['url'])

			# Save objects if not already in database
			cve_obj.save()
			product_obj.save()
			data_source_obj.save()
			patch_obj.save()
			print("added cve: ", cve_obj.id)



def update_database():
	try:
		data = fetch_data()		
		process_data(data)
		return JsonResponse({'status': 'ok'})

	except Exception as e:
		return JsonResponse({'error': 'An unexpected error occurred: {}'.format(str(e))}, status=500)
