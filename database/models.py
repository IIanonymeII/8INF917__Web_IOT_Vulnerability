from django.db import models
from django.utils import timezone

class CVE(models.Model):
    id = models.CharField(max_length=50, primary_key=True)
    description = models.TextField(default="")
    title = models.CharField(max_length=200, default="", blank=True)
    type = models.CharField(max_length=50, default="", blank=True)
    last_updated = models.DateTimeField(default=timezone.now)
    release_date = models.DateTimeField(default=timezone.now)
    severity = models.CharField(max_length=50, default="", blank=True)

    def to_dict(self):
    	return {
			'id': self.id,
			'description': self.description,
			'title': self.title,
			'type': self.type,
			'last_updated': self.last_updated,
			'release_date': self.release_date,
			'severity': self.severity,
			'affected_products': [product.to_dict() for product in self.affected_products.all()],
			'data_sources': [data_source.to_dict() for data_source in self.data_sources.all()],
			'patches': [patch.to_dict() for patch in self.patches.all()],
		}

    class Meta:
        verbose_name = "CVE"
        verbose_name_plural = "CVEs"


class Product(models.Model):
	cve = models.ForeignKey(CVE, related_name='affected_products', on_delete=models.CASCADE)
	model = models.CharField(max_length=100, default="", blank=True, null=True)
	vendor = models.CharField(max_length=100, default="", blank=True, null=True)
	version = models.CharField(max_length=100, default="", blank=True, null=True)

	def to_dict(self):
		return {
			'model': self.model,
			'vendor': self.vendor,
			'version': self.version,
		}

	class Meta:
		verbose_name = "Product"
		verbose_name_plural = "Products"

class DataSources(models.Model):
	cve = models.ForeignKey(CVE, related_name='data_sources', on_delete=models.CASCADE)
	name = models.CharField(max_length=100, default="", blank=True, null=True)
	external_id = models.CharField(max_length=100, default="", blank=True, null=True)

	def get_url(self):
		switcher = {
			"NVD": "https://nvd.nist.gov/vuln/detail/"+self.external_id,
			"EXPLOIT-DB": "https://www.exploit-db.com/exploits/"+self.external_id,
			"PACKETSTORM": "https://packetstormsecurity.com/files/"+self.external_id,
			"AUSCERT": "https://www.auscert.org.au/bulletins/"+self.external_id,
			"LENOVO": "https://support.lenovo.com/solutions/"+self.external_id,
		}

		return switcher.get(self.name, "https://www.google.com/search?q=CVE " + self.name + " " + self.external_id)


	def to_dict(self):
		return {
			'name': self.name,
			'external_id': self.external_id,
		}

	class Meta:
		verbose_name = "Data Source"
		verbose_name_plural = "Data Sources"

class Patch(models.Model):
	cve = models.ForeignKey(CVE, related_name='patches', on_delete=models.CASCADE)
	name = models.CharField(max_length=100, default="", blank=True, null=True)
	url = models.CharField(max_length=100, default="", blank=True, null=True)

	def to_dict(self):
		return {
			'name': self.name,
			'url': self.url,
		}

	class Meta:
		verbose_name = "Patch"
		verbose_name_plural = "Patches"