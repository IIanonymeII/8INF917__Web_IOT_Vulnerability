const grid = new gridjs.Grid({
	columns: [
		{
			name: 'Vendeur',
			width: '15%',
			attributes: (cell) => {
				if (cell)
					return {
						'pointer': ''
					}
			}
		},
		{
			name: 'Nombre de CVEs',
			width: '15%'
		}
	],
	server: {
		url: "/api/vendors?",
		then: data => {
			console.log(data);
			return data.data.map((item) => {
				return [item.vendor, item.cve_count]
			});
		},
		total: data => data.total,
	},
	search: {
		server: {
			url: (prev, keyword) => `${prev}&search=${keyword}`
		}
	},
	pagination: {
		limit: 10,
		summary: true,
		server: {
			url: (prev, page, limit) => `${prev}&page=${page}`
		}
	},
	sort: {
		server: {
			url: (prev, columns) => {
				if (!columns.length)
					return prev;

				const col = columns[0];
				const dir = col.direction === 1 ? 'asc' : 'desc';
				let colName = ['vendor', 'cve_count'][col.index];

				return `${prev}&order=${colName}&dir=${dir}`;
			}
		}
	},
	resizable: true,
	fixedHeader: true,
	language: {
		search: {
			placeholder: '🔍 Recherche...',
		},
		sort: {
			sortAsc: "Trier la colonne dans l'ordre croissant",
			sortDesc: "Trier la colonne dans l'ordre décroissant",
		},
		pagination: {
			previous: 'Précédent',
			next: 'Suivant',
			navigate: (page, pages) => `Page ${page} de ${pages}`,
			page: (page) => `Page ${page}`,
			showing: 'Affichage des résultats',
			of: 'sur',
			to: 'à',
			results: '',
		},
		loading: 'Chargement...',
		noRecordsFound: 'Aucun résultat trouvé',
		error: 'Une erreur est survenue lors de la récupération des données',
	}
}).render(document.querySelector('table'));

grid.on('cellClick', (...args) => {
	const id = args[1].data;
	const cellId = args[2].id;
	console.log(args)

	if (cellId === "vendeur")
		window.location.href = `/vendor/${id}`;
});